{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yomi\\\\Desktop\\\\next-ssr\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Home\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: `robot/${robot.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, robot.name)))));\n};\n\nRobots.getInitialProps = async function () {\n  try {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await res.json();\n    return {\n      robots: data\n    };\n  } catch (err) {}\n};\n\nexport default Robots;","map":{"version":3,"sources":["C:/Users/Yomi/Desktop/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","getInitialProps","res","data","json","err"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAChB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,SAAQD,KAAK,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,KAAK,CAACE,IAAxC,CADF,CADD,CADH,CALF,CADF;AAeD,CAhBD;;AAkBAN,MAAM,CAACO,eAAP,GAAyB,kBAAkB;AACzC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,4CAAD,CAAvB;AACA,UAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,WAAO;AACLR,MAAAA,MAAM,EAAEO;AADH,KAAP;AAGD,GAND,CAME,OAAOE,GAAP,EAAY,CAAE;AACjB,CARD;;AAUA,eAAeX,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Robots = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Robots</h1>\r\n      <Link href=\"/\">\r\n        <button>Home</button>\r\n      </Link>\r\n      <div>\r\n        {props.robots.map((robot) => (\r\n          <li key={robot.id}>\r\n            <Link href={`robot/${robot.id}`}>{robot.name}</Link>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRobots.getInitialProps = async function () {\r\n  try {\r\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    const data = await res.json();\r\n    return {\r\n      robots: data,\r\n    };\r\n  } catch (err) {}\r\n};\r\n\r\nexport default Robots;\r\n"]},"metadata":{},"sourceType":"module"}